version: '3.7'
services:
  composedSqlContainer:
    image: mysql #e00adb645cb5 #mysql #087c6f86492c #mysql #087c6f86492c #mysql:latest #087c6f86492c #mysql/mysql-server #mysql:5.7 #mysql/mysql-server
    #container_name: composedSqlContainer #mysqlServerContainer
    #restart: always
    environment:
      MYSQL_DATABASE: jwt_spring_application_docker
      MYSQL_ROOT_PASSWORD: password
      #MYSQL_PASSWORD: password
      #MYSQL_USERNAME: root
    ports:
      - "3308:3306"
    #    networks:
    #      - common-network

#    volumes:
#      # Just specify a path and let the Engine create a volume
#      # - /var/lib/mysql
#      - ./mysqlPersistenceVolume:/var/lib/mysql

#    healthcheck:
#      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
#      timeout: 20s
#      retries: 10

  minio:
    image: quay.io/minio/minio # #minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
      #volumes:
      #- ./storage/minio:/data
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    command: minio server /data
#    volumes:
#      # Just specify a path and let the Engine create a volume
#      - /data

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set miniobucket http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb miniobucket/bucket;
      /usr/bin/mc policy set public miniobucket/bucket;
      exit 0;"

  springBootAppContainer:
    image: spring-boot-app
    ports:
      - "8081:8081"

    environment:
      #SPRING_DATASOURCE_URL:jdbc: jdbc:mysql://localhost:3310/jwt_spring_application_docker?allowPublicKeyRetrieval=true&useSSL=false&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&zeroDateTimeBehavior=convertToNull
      SPRING_DATASOURCE_URL:jdbc: jdbc:mysql://composedSqlContainer:3306/jwt_spring_application_docker?autoReconnect=true&allowPublicKeyRetrieval=true&useSSL=false&useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&zeroDateTimeBehavior=convertToNull
      SPRING_DATASOURCE_PASSWORD: "password"
      SPRING_DATASOURCE_USERNAME: "root"
    #    networks:
    #      - common-network
    build:
      context: .
      dockerfile: Dockerfile

    depends_on:
      - composedSqlContainer
      - minio
      - createbuckets

    #command: sh -c './wait-for minio:9000 -- java -jar spring-boot-app.jar'
    entrypoint: [ "/wait-for-it.sh", "composedSqlContainer:3306",  "-t", "120", "--", "java", "-jar", "spring-boot-app.jar" ]

    #    command:
    #      - /bin/bash
    #      - -c
    #      - |
    #        /opt/mssql/bin/sqlservr
    #        curl -s https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh | bash /dev/stdin localhost:3308


    #restart: on-failure

#networks:
#  common-network:
#    driver: bridge



#volumes:
#  mySqlVolume:
#    driver: local
#    driver_opts:
#      type: 'none'
#      o: 'bind'
#      device: '/srv/db-data'